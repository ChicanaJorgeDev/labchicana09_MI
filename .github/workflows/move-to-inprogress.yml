name: Move Issue in Project when PR references it

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

permissions:
  contents: read
  issues: write
  pull-requests: read
  projects: write

jobs:
  move_issue_status:
    runs-on: ubuntu-latest

    steps:
      - name: Extract referenced issue number
        id: extract
        run: |
          ISSUE=$(echo "${{ github.event.pull_request.body }}" | grep -oE '#[0-9]+' | head -n1 | tr -d '#')
          if [ -n "$ISSUE" ]; then
            echo "issue_number=$ISSUE" >> $GITHUB_ENV
          fi

      - name: Move issue in user project
        if: env.issue_number != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = process.env.issue_number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const projectName = "Desarrollo App Nutricional (Chicana)";
            
            // Detecta estado deseado
            const desiredStatus = context.payload.action === "closed"
              ? "Done"
              : "In Progress";

            console.log(`➡️ PR ${context.payload.action} → moviendo issue #${issueNumber} a '${desiredStatus}'`);

            // 1️⃣ Buscar proyecto de usuario
            const result = await github.graphql(`
              query($login: String!) {
                user(login: $login) {
                  projectsV2(first: 20) {
                    nodes {
                      id
                      title
                      fields(first: 20) {
                        nodes {
                          id
                          name
                          ... on ProjectV2SingleSelectField {
                            options { id name }
                          }
                        }
                      }
                    }
                  }
                }
              }`,
              { login: owner }
            );

            const project = result.user.projectsV2.nodes.find(p => p.title === projectName);
            if (!project) {
              core.setFailed(`❌ No se encontró el proyecto '${projectName}'`);
              return;
            }

            // 2️⃣ Buscar campo Status
            const statusField = project.fields.nodes.find(f => f.name === "Status");
            if (!statusField) {
              core.setFailed("❌ No se encontró el campo 'Status'");
              return;
            }

            // 3️⃣ Buscar la opción deseada
            const statusOption = statusField.options.find(o => o.name === desiredStatus);
            if (!statusOption) {
              core.setFailed(`❌ No existe la opción '${desiredStatus}'`);
              return;
            }

            // 4️⃣ Obtener issue y agregar al proyecto
            const { data: issue } = await github.rest.issues.get({ owner, repo, issue_number: issueNumber });
            const issueNodeId = issue.node_id;

            const addResult = await github.graphql(`
              mutation($projectId: ID!, $contentId: ID!) {
                addProjectV2ItemById(input: { projectId: $projectId, contentId: $contentId }) {
                  item { id }
                }
              }`,
              { projectId: project.id, contentId: issueNodeId }
            );

            const itemId = addResult.addProjectV2ItemById.item.id;

            // 5️⃣ Cambiar estado
            await github.graphql(`
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { singleSelectOptionId: $optionId }
                }) {
                  projectV2Item { id }
                }
              }`,
              {
                projectId: project.id,
                itemId,
                fieldId: statusField.id,
                optionId: statusOption.id
              }
            );

            console.log(`✅ Issue #${issueNumber} movido a '${desiredStatus}' en '${projectName}'`);
