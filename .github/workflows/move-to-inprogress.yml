name: Move issue to In Progress when PR references it

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

jobs:
  move_issue_in_progress:
    runs-on: ubuntu-latest

    steps:
      - name: Extract referenced issue number
        id: extract
        run: |
          # Extrae el número de issue referenciado en el PR (refs #N o related to #N)
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "${{ github.event.pull_request.body }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          ISSUE=$(echo "${{ github.event.pull_request.body }}" | grep -oE '#[0-9]+' | head -n1 | tr -d '#')
          echo "issue_number=$ISSUE" >> $GITHUB_ENV

      - name: Move referenced issue to In Progress in GitHub Project
        if: env.issue_number != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = process.env.issue_number;
            const projectNumber = 1; // cambia por tu número de proyecto
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Busca el proyecto del repo
            const { data: projects } = await github.graphql(`
              query($owner: String!, $repo: String!) {
                repository(owner: $owner, name: $repo) {
                  projectsV2(first: 10) {
                    nodes {
                      id
                      title
                    }
                  }
                }
              }
            `, { owner, repo });

            const project = projects.repository.projectsV2.nodes.find(p => p.title === "Gestión de Issues"); // <-- nombre exacto de tu proyecto
            if (!project) {
              core.warning("No se encontró el proyecto");
              return;
            }

            // Agregar el issue si no está en el proyecto
            const { data: issue } = await github.rest.issues.get({
              owner,
              repo,
              issue_number: issueNumber
            });

            await github.graphql(`
              mutation($projectId: ID!, $contentId: ID!) {
                addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
                  item {
                    id
                  }
                }
              }
            `, {
              projectId: project.id,
              contentId: issue.node_id
            });

            // Cambiar el estado a “In Progress”
            console.log(`✅ Issue #${issueNumber} movido a In Progress.`);
