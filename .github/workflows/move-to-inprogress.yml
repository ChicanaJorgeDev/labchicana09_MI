name: Move issue to In Progress when PR references it

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

permissions:
  contents: read
  issues: write
  pull-requests: read
  projects: write

jobs:
  move_issue_in_progress:
    runs-on: ubuntu-latest

    steps:
      - name: Extract referenced issue number
        id: extract
        run: |
          ISSUE=$(echo "${{ github.event.pull_request.body }}" | grep -oE '#[0-9]+' | head -n1 | tr -d '#')
          echo "issue_number=$ISSUE" >> $GITHUB_ENV

      - name: Move referenced issue to In Progress (User Project)
        if: env.issue_number != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = process.env.issue_number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const projectName = "Desarrollo App Nutricional (Chicana)";
            const desiredStatus = "In Progress";

            // üîç 1Ô∏è‚É£ Buscar el proyecto en los proyectos del usuario
            const query = `
              query($login: String!) {
                user(login: $login) {
                  projectsV2(first: 20) {
                    nodes {
                      id
                      title
                      fields(first: 20) {
                        nodes {
                          id
                          name
                          ... on ProjectV2SingleSelectField {
                            options { id name }
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;
            const result = await github.graphql(query, { login: owner });
            const projects = result.user.projectsV2.nodes;
            const project = projects.find(p => p.title === projectName);

            if (!project) {
              core.warning(`‚ö†Ô∏è No se encontr√≥ el proyecto "${projectName}" en el usuario ${owner}`);
              return;
            }

            // üß© 2Ô∏è‚É£ Buscar el campo Status y la opci√≥n In Progress
            const statusField = project.fields.nodes.find(f => f.name === "Status");
            if (!statusField) {
              core.warning("‚ö†Ô∏è No se encontr√≥ el campo 'Status'");
              return;
            }

            const inProgressOption = statusField.options.find(o => o.name === desiredStatus);
            if (!inProgressOption) {
              core.warning(`‚ö†Ô∏è No se encontr√≥ la opci√≥n '${desiredStatus}'`);
              return;
            }

            // üì¶ 3Ô∏è‚É£ Obtener la issue
            const { data: issue } = await github.rest.issues.get({ owner, repo, issue_number: issueNumber });
            const issueNodeId = issue.node_id;

            // ‚ûï 4Ô∏è‚É£ Agregar la issue al proyecto si no est√°
            const addMutation = `
              mutation($projectId: ID!, $contentId: ID!) {
                addProjectV2ItemById(input: { projectId: $projectId, contentId: $contentId }) {
                  item { id }
                }
              }
            `;
            const addResult = await github.graphql(addMutation, {
              projectId: project.id,
              contentId: issueNodeId
            });
            const itemId = addResult.addProjectV2ItemById.item.id;

            // üîÑ 5Ô∏è‚É£ Actualizar el campo Status ‚Üí In Progress
            const updateMutation = `
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { singleSelectOptionId: $optionId }
                }) {
                  projectV2Item { id }
                }
              }
            `;
            await github.graphql(updateMutation, {
              projectId: project.id,
              itemId,
              fieldId: statusField.id,
              optionId: inProgressOption.id
            });

            console.log(`‚úÖ Issue #${issueNumber} movido a '${desiredStatus}' en el proyecto '${projectName}'.`);
